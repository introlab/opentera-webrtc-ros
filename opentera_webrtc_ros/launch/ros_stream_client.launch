<launch>

    <!-- Arguments -->
    <arg name="name" default="topic_streamer"/>
    <arg name="is_stand_alone" default="true"/>

    <arg name="output" default="log"/>

    <!-- Video -->
    <arg name="can_send_video_stream" default="false"/>
    <arg name="can_receive_video_stream" default="false"/>
    <arg name="is_screen_cast" default="false"/>
    <arg name="needs_denoising" default="false"/>

    <!-- Audio -->
    <arg name="can_send_audio_stream" default="false"/>
    <arg name="can_receive_audio_stream" default="false"/>
    <arg name="sound_card_total_delay_ms" default="40"/>
    <arg name="echo_cancellation" default="true"/>
    <arg name="auto_gain_control" default="true"/>
    <arg name="noise_suppression" default="true"/>
    <arg name="high_pass_filter" default="false"/>
    <arg name="stereo_swapping" default="false"/>
    <arg name="typing_detection" default="false"/>
    <arg name="residual_echo_detector" default="true"/>
    <arg name="transient_suppression" default="true"/>

    <!-- Signaling -->
    <arg name="server_url" default="http://localhost:8080"/>
    <arg name="client_name" default="streamer"/>
    <arg name="room_name" default="chat"/>
    <arg name="room_password" default="abc"/>
    <arg name="verify_ssl" default="true"/>

    <!-- Topics -->
    <arg name="input_camera_topic" default="ros_image"/>
    <arg name="output_webrtc_image_topic" default="webrtc_image"/>
    <arg name="input_audio_topic" default="audio_in"/>
    <arg name="output_audio_mixed_topic" default="audio_mixed"/>
    <arg name="output_webrtc_audio_topic" default="webrtc_audio"/>

    <node name="$(arg name)" pkg="opentera_webrtc_ros" type="topic_streamer" output="$(arg output)" respawn="true">
        <rosparam param="is_stand_alone" subst_value="true">$(arg is_stand_alone)</rosparam>
        <rosparam param="videoStream" subst_value="true">
            {
                can_send_video_stream: $(arg can_send_video_stream),        # Is the node can send video stream to the signaling server
                can_receive_video_stream: $(arg can_receive_video_stream),  # Is the node can receive video stream from the signaling server
                is_screen_cast: $(arg is_screen_cast),          # Is the image source a screen capture?
                needs_denoising: $(arg needs_denoising)         # Does the image source needs denoising?
            }
        </rosparam>
        <rosparam param="audioStream" subst_value="true">
            {
                can_send_audio_stream: $(arg can_send_audio_stream),        # Is the node can send audio stream to the signaling server
                can_receive_audio_stream: $(arg can_receive_audio_stream),  # Is the node can receive audio stream from the signaling server
                sound_card_total_delay_ms: $(arg sound_card_total_delay_ms),
                echo_cancellation: $(arg echo_cancellation),
                auto_gain_control: $(arg auto_gain_control),
                noise_suppression: $(arg noise_suppression),
                high_pass_filter: $(arg high_pass_filter),
                stereo_swapping: $(arg stereo_swapping),
                typing_detection: $(arg typing_detection),
                residual_echo_detector: $(arg residual_echo_detector),
                transient_suppression: $(arg transient_suppression)
            }
        </rosparam>

        <rosparam param="signaling" subst_value="true">
            {
                server_url: $(arg server_url),        # Signaling server URL
                client_name: $(arg client_name),      # Peer name as which to join the room
                room_name: $(arg room_name),          # Room name to join
                room_password: $(arg room_password),  # Room password
                verify_ssl: $(arg verify_ssl)         # SSL peer verification
            }
        </rosparam>

        <remap from="ros_image" to="$(arg input_camera_topic)"/>
        <remap from="webrtc_image" to="$(arg output_webrtc_image_topic)"/>
        <remap from="audio_in" to="$(arg input_audio_topic)"/>
        <remap from="audio_mixed" to="$(arg output_audio_mixed_topic)"/>
        <remap from="webrtc_audio" to="$(arg output_webrtc_audio_topic)"/>
    </node>

</launch>
